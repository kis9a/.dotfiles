#!/bin/bash
# PLATFORM is the environment variable that
# retrieves the name of the running platform
export PLATFORM

source <(curl -s https://raw.githubusercontent.com/kis9a/dotfiles/master/etc/utiles/general.sh)
source <(curl -s https://raw.githubusercontent.com/kis9a/dotfiles/master/etc/utiles/ostype.sh)
source <(curl -s https://raw.githubusercontent.com/kis9a/dotfiles/master/etc/utiles/logging.sh)
source <(curl -s https://raw.githubusercontent.com/kis9a/dotfiles/master/etc/utiles/message.sh)

# Dotfiles {{{1

# Set DOTPATH as default variable
if [ -z "${DOTPATH:-}" ]; then
	DOTPATH=~/dotfiles
	export DOTPATH
fi

DOTFILES_GITHUB="https://github.com/kis9a/dotfiles"
export DOTFILES_GITHUB

dotfiles_logo='
         _
  | o _(_| _.
  |<|_>  |(_|\

'

dotfiles_download() {
	if [ -d "$DOTPATH" ]; then
		log_fail "$DOTPATH: already exists"
		exit 1
	fi

	e_newline
	e_header "Downloading dotfiles..."

	if is_debug; then
		:
	else
		if is_exists "git"; then
			git clone --recursive "$DOTFILES_GITHUB" "$DOTPATH"

		elif is_exists "curl" || is_exists "wget"; then
			# curl or wget
			local tarball="https://github.com/kis9a/dotfiles/archive/master.tar.gz"
			if is_exists "curl"; then
				curl -L "$tarball"

			elif is_exists "wget"; then
				wget -O - "$tarball"

			fi | tar xvz
			if [ ! -d dotfiles-master ]; then
				log_fail "dotfiles-master: not found"
				exit 1
			fi
			command mv -f dotfiles-master "$DOTPATH"

		else
			log_fail "curl or wget required"
			exit 1
		fi
	fi
	e_newline && e_done "Download"
}

dotfiles_deploy() {
	e_newline
	e_header "Deploying dotfiles..."

	if [ ! -d $DOTPATH ]; then
		log_fail "$DOTPATH: not found"
		exit 1
	fi

	cd "$DOTPATH"

	if is_debug; then
		:
	else
		if ! has make; then
			if is_linux; then
				sudo apt install build-essential
			fi
		fi

		make deploy
	fi &&
		e_newline && e_done "Deploy"
}

dotfiles_initialize() {
	e_newline
	e_header "Initializing dotfiles..."
	make init

	if is_debug; then
		:
	else
		if [ -f Makefile ]; then
			make init
		else
			log_fail "Makefile: not found"
			exit 1
		fi
	fi &&
	e_newline && e_done "Initialize"
}

# A script for the file named "install"
dotfiles_install() {
	dotfiles_download &&
		dotfiles_deploy &&
		dotfiles_initialize
}

echo "$dotfiles_logo"
dotfiles_install

# Restart shell
e_newline
e_arrow "Restarting your shell..."
exec "${SHELL:-/bin/zsh}"
